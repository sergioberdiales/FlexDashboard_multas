ggplot(aes(x = Mes, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
summary(as.factor(data$IMPORTE))
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(TIPO, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = TIPO, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(CALIFICACION, TIPO) %>%
summarize(`Importe multas (€)` = sum(IMPORTE, na.rm=TRUE)) %>%
ggplot(aes(x = TIPO, y = `Importe multas (€)`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity') +
geom_text(aes(label=len), vjust=-0.3, size=3.5)
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity') +
geom_text(aes(label=`Número de multas`), vjust=-0.3, size=3.5)
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(TIPO, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = TIPO, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.5)) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(TIPO, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = TIPO, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.5))) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(TIPO, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = TIPO, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(CALIFICACION, TIPO) %>%
summarize(`Importe multas (€)` = sum(IMPORTE, na.rm=TRUE)) %>%
ggplot(aes(x = TIPO, y = `Importe multas (€)`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity')
ggplotly(p)
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
multas <- read_csv('data_multas.csv')
multas <- multas %>% mutate(fct_relevel(CALIFICACION, c("Leve", "Grave", "Muy Grave")))
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Año, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Importe multas (€)` = sum(IMPORTE, na.rm=TRUE)) %>%
ggplot(aes(x = Año, y = `Importe multas (€)`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(TIPO, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = TIPO, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(CALIFICACION, TIPO) %>%
summarize(`Importe multas (€)` = sum(IMPORTE, na.rm=TRUE)) %>%
ggplot(aes(x = TIPO, y = `Importe multas (€)`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Mes = as.factor(month(date_time))) %>%
group_by(Mes, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Mes, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity')
ggplotly(p)
glimpse(multas)
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
multas <- read_csv('data_multas.csv')
multas <- multas %>% mutate(CALIFICACION = fct_relevel(CALIFICACION, c("Leve", "Grave", "Muy Grave")))
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Año, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Importe multas (€)` = sum(IMPORTE, na.rm=TRUE)) %>%
ggplot(aes(x = Año, y = `Importe multas (€)`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(TIPO, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = TIPO, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(CALIFICACION, TIPO) %>%
summarize(`Importe multas (€)` = sum(IMPORTE, na.rm=TRUE)) %>%
ggplot(aes(x = TIPO, y = `Importe multas (€)`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(Mes = as.factor(month(date_time))) %>%
group_by(Mes, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Mes, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity')
ggplotly(p)
p <- multas %>%
mutate(IMPORTE = as.factor(IMPORTE)) %>%
group_by(CALIFICACION, IMPORTE) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = IMPORTE, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity')
ggplotly(p)
colScale <- scale_colour_manual(name = "gor",values = c("green", "orange", "red"))
colScale <- scale_colour_manual(name = "gor",values = c("green", "orange", "red"))
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Año, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity') +
colScale
ggplotly(p)
?scale_color_manual
colScale <- scale_colour_manual(name = "gor",values = c("green", "orange", "red"))
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Año, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "green", "Grave" = "orange", "Muy Grave" = "red"))
ggplotly(p)
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
library(forcats)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, CALIFICACION) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Año, y = `Número de multas`, fill = CALIFICACION)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "orange", "Muy Grave" = "red"))
ggplotly(p)
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
library(forcats)
multas <- read_csv('data_multas.csv', col_types = cols(.default = "c"))
numeric_features <- c("IMPORTE", "DESCUENTO", "PUNTOS", "LATITUD", "LONGITUD")
factor_features <- c("TIPO", "CALIFICACION", "LUGAR", "INFRACCION")
for (i in numeric_features)
multas[[i]] <- as.numeric(multas[[i]])
for (i in factor_features)
multas[[i]] <- as.factor(multas[[i]])
multas$date_time <- ymd_hms(multas$date_time)
# Reordenamos los niveles de la variable CALIFICACION
multas <- multas %>%
mutate(CALIFICACION = fct_relevel(CALIFICACION, c("Leve", "Grave", "Muy Grave"))) %>%
rename(Tipo = TIPO,
Calificacion = CALIFICACION,
Importe = IMPORTE)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, Calificacion) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Año, y = `Número de multas`, fill = Calificacion)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "#FF8C00", "Muy Grave" = "red"))
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Año, Calificacion) %>%
summarize(`Importe multas (€)` = sum(Importe, na.rm=TRUE)) %>%
ggplot(aes(x = Año, y = `Importe multas (€)`, fill = Calificacion)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "#FF8C00", "Muy Grave" = "red"))
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Tipo, Calificacion) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Tipo, y = `Número de multas`, fill = Calificacion)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "#FF8C00", "Muy Grave" = "red"))
ggplotly(p)
p <- multas %>%
mutate(Año = year(date_time)) %>%
group_by(Calificacion, Tipo) %>%
summarize(`Importe multas (€)` = sum(Importe, na.rm=TRUE)) %>%
ggplot(aes(x = Tipo, y = `Importe multas (€)`, fill = Calificacion)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x=element_text(size=rel(0.8))) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "#FF8C00", "Muy Grave" = "red"))
ggplotly(p)
p <- multas %>%
mutate(Mes = as.factor(month(date_time))) %>%
group_by(Mes, Calificacion) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Mes, y = `Número de multas`, fill = Calificacion)) +
theme_bw() +
theme(legend.title = element_blank()) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "#FF8C00", "Muy Grave" = "red"))
ggplotly(p)
p <- multas %>%
mutate(Importe = as.factor(Importe)) %>%
group_by(Calificacion, Importe) %>%
summarize(`Número de multas` = n()) %>%
ggplot(aes(x = Importe, y = `Número de multas`, fill = Calificacion)) +
theme_bw() +
theme(legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat = 'identity') +
scale_fill_manual("legend", values = c("Leve" = "#228B22", "Grave" = "#FF8C00", "Muy Grave" = "red"))
ggplotly(p)
View(multas)
library(tidyverse)
# Ejemplo marcador
library(leaflet)
m <- leaflet(data = multas
%>% filter(Tipo == 'Muy Grave'),
!is.na(LONGITUD),
!is.na(LATITUD)),
year(date_time) == '2018') %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addMarkers(lng = ~LONGITUD, lat = ~LATITUD)
m  # Imprime el mapa
multas_prueba <- multas %>% filter(Tipo == 'Muy Grave',
!is.na(LONGITUD),
!is.na(LATITUD),
year(date_time) == '2018')
library(tidyverse)
library(lubridate)
multas_prueba <- multas %>% filter(Tipo == "Muy Grave",
!is.na(LONGITUD),
!is.na(LATITUD),
year(date_time) == '2018')
multas_prueba <- multas %>% filter(Tipo == "Muy Grave",
year(date_time) == "2018")
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave",
year(date_time) == "2018")
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave",
!is.na(LONGITUD),
!is.na(LATITUD),
year(date_time) == "2018")
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave",
year(date_time) == "2018")
# Ejemplo marcador
library(leaflet)
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addMarkers(lng = ~LONGITUD, lat = ~LATITUD)
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave",
year(date_time) == "2018")
View(multas_prueba)
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave")
View(multas_prueba)
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave")
# Ejemplo marcador
library(leaflet)
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addMarkers(lng = ~LONGITUD, lat = ~LATITUD)
m  # Imprime el mapa
multas_prueba <- multas %>% filter(Calificacion == "Muy Grave",
!is.na(LONGITUD),
!is.na(LATITUD))
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addMarkers(lng = ~LONGITUD, lat = ~LATITUD)
m  # Imprime el mapa
View(multas_prueba)
# Ejemplo marcador
library(leaflet)
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addPoints(lng = ~LONGITUD, lat = ~LATITUD)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircles(lng = ~LONGITUD, lat = ~LATITUD)
m  # Imprime el mapa
# Ejemplo marcador
library(leaflet)
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircles(lng = ~LONGITUD, lat = ~LATITUD, fill = TRUE)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircles(lng = ~LONGITUD, lat = ~LATITUD, fill = TRUE, color = 'red')
m  # Imprime el mapa
library(leaflet)
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircles(lng = ~LONGITUD, lat = ~LATITUD, fill = TRUE, color = 'red', stroke = FALSE)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircles(lng = ~LONGITUD, lat = ~LATITUD,
fill = TRUE,
color = 'red',
stroke = FALSEk,
radius = 10)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircles(lng = ~LONGITUD, lat = ~LATITUD,
fill = TRUE,
color = 'red',
stroke = FALSE,
radius = 20)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircleMarkers(lng = ~LONGITUD, lat = ~LATITUD,
fill = TRUE,
color = 'red',
stroke = FALSE,
radius = 20)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircleMarkers(lng = ~LONGITUD, lat = ~LATITUD,
fill = TRUE,
color = 'red',
stroke = FALSE,
radius = 5)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircleMarkers(lng = ~LONGITUD, lat = ~LATITUD,
fill = TRUE,
color = 'red',
stroke = FALSE,
radius = 10)
m  # Imprime el mapa
m <- leaflet(data = multas_prueba)  %>%
addTiles() %>%  # Añade por defecto los Tiles de  OpenStreetMap
addCircleMarkers(lng = ~LONGITUD, lat = ~LATITUD,
fill = TRUE,
color = 'red',
stroke = FALSE,
radius = 10,
fillOpacity = 0.5)
m  # Imprime el mapa
library(flexdashboard)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(plotly)
library(forcats)
ggplotly(m)  # Imprime el mapa
